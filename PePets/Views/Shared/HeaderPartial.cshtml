@using Microsoft.AspNetCore.Http.Extensions
@inject PePets.Models.UserRepository _userRepository

<header>
    <nav class="navbar navbar-expand-lg bg-info fixed-top">
        <div class="row justify-content-between align-items-center w-100">
            <div class="col-3 d-inline-flex">
                <a asp-controller="Home" asp-action="Index" class="navbar-brand">
                    <img src="~/img/Logo.png" alt="Logo" width="50" height="50" />
                </a>
            </div>

            <div class="col-3 title text-center text-light">
                <h3>PePets</h3>
            </div>

            <div class="col-3 text-right user">
                @if (User.Identity.IsAuthenticated)
                {
                    <div>
                        <a class="dropdown-toggle text-decoration-none text-white" href="#" id="dropdownUserMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @await Component.InvokeAsync("AvatarPartial", User)
                        </a>

                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownUserMenu">
                            <div class="list-group list-group-flush">
                                <a asp-controller="Users" asp-action="UserProfile" asp-route-id=@_userRepository.GetCurrentUser(User).Id class="dropdown-item list-group-item">Мой профиль</a>

                                <a href="#" class="dropdown-item list-group-item">
                                    Сообщения
                                    <span class="badge badge-primary badge-pill">5</span>
                                </a>

                                @if (User.IsInRole("admin"))
                                {
                                    <a class="dropdown-item list-group-item" asp-controller="Roles" asp-action="Index">Админка</a>
                                }
                                <form asp-controller="Account" asp-action="Logout" method="post">
                                    <button type="submit" class="dropdown-item list-group-item">Выйти</button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <button type="button" class="btn btn-outline-light" data-toggle="modal" data-target="#ModalAuth">
                        Войти
                    </button>
                }
            </div>
        </div>
        @await Component.InvokeAsync("IsEmailConfirmed", User.Identity.Name)
    </nav>
</header>

<div class="modal fade" id="ModalAuth" tabindex="-1" role="dialog" aria-labelledby="AuthLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
                @await Html.PartialAsync("../Account/Login.cshtml", new PePets.Models.Login() { ReturnUrl = Context.Request.GetDisplayUrl() })

                @await Html.PartialAsync("../Account/Register.cshtml", new PePets.Models.Register())
        </div>
    </div>
</div>
